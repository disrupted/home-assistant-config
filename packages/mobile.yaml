sensor:
  - platform: template
    sensors:
      nearest_iphone_notify:
        friendly_name: Nearest iPhone's notify service
        value_template: >
          {% if is_state("person.salomon", "home") %}
            notify.all_iphones
          {% elif is_state_attr("proximity.home", "nearest", "Salomon") %}
            notify.mobile_app_disrupted_iphone
          {% else %}
            notify.mobile_app_scar_on
          {% endif %}

automation:
  - alias: Hass Update Available mobile
    id: hass_update_available_mobile
    trigger:
      platform: state
      entity_id: binary_sensor.updater
      from: "off"
      to: "on"
    action:
      - service: notify.mobile_app_disrupted_iphone
        data_template:
          data:
            push:
              thread-id: "hass-update"
          title: "Update {{ state_attr('binary_sensor.updater', 'newest_version') }} is now available."
          message: >
            {{ state_attr('binary_sensor.updater', 'release_notes') }}
            {{ states('sensor.github_home_assistant_release') }}:
            {{ state_attr('sensor.github_home_assistant_release', 'body') }}
