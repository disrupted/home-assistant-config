# inspired by: https://github.com/Vasiley/Home-Assistant-Main/blob/master/packages/google_calender.yaml
homeassistant:
  customize:
    sensor.days_to_next_appointment:
      icon: mdi:calendar-clock
    sensor.next_appt_description:
      icon: mdi:note
    sensor.next_appt_message:
      icon: mdi:note
    sensor.next_appt_date_time:
      icon: mdi:calendar-clock
    # calendar.main_calender:
    #   friendly_name: Our Calender
    #   icon: mdi:calendar-clock
    calendar.feiertage_berlin:
      friendly_name: Feiertage Berlin
      icon: mdi:calendar-clock
    sensor.days_to_next_holiday:
      icon: mdi:calendar-clock
    sensor.next_holiday:
      friendly_name: Holiday
      # icon: mdi:emoticon-happy
      icon: mdi:flag-variant-outline
    sensor.next_holiday_date:
      icon: mdi:calendar-clock
    sensor.next_birthday:
      icon: mdi:cake-variant
    sensor.days_to_next_birthday:
      icon: mdi:calendar-clock
    sensor.next_birthday_date:
      icon: mdi:calendar-clock
    group.calendar:
      icon: mdi:calendar
    sensor.uni_lsf_next_class_name_short:
      icon: mdi:book-variant
    sensor.uni_lsf_next_class_name_full:
      icon: mdi:book-variant
    sensor.uni_lsf_next_class_description:
      icon: mdi:book-variant
    sensor.uni_lsf_next_class_prof:
      icon: mdi:school
    sensor.uni_lsf_next_class_room:
      icon: mdi:school
    sensor.uni_lsf_next_class_date_time:
      icon: mdi:calendar-clock
  customize_glob:
    automation.calendar_*:
      icon: mdi:calendar-clock

google:
  client_id: !secret api_client_id_google
  client_secret: !secret api_client_secret_google
  track_new_calendar: true

group:
  google_calendar:
    name: Calendar
    icon: mdi:calendar
    entities:
      - sensor.next_appt_message
      - sensor.next_appt_description
      - sensor.next_appt_date_time
      - sensor.days_to_next_appointment
      - sensor.next_holiday
      - sensor.next_holiday_date
      - sensor.days_to_next_holiday
      - sensor.next_birthday
      - sensor.next_birthday_date
      - sensor.days_to_next_birthday

binary_sensor:
  - platform: workday
    country: DE
    province: BE

  - platform: template
    sensors:
      uni_lsf_next_class_is_lab:
        friendly_name: "Next Class is lab"
        value_template: >
          {{ state_attr('calendar.uni_lsf', 'message') | regex_search('\(Ãœ\)', ignorecase=False) }}

sensor:
  - platform: time_date
    display_options:
      - "time"
      - "date"
      # - 'date_time'

  ### Uni ######################################################
  - platform: template
    sensors:
      uni_lsf_next_class_message:
        friendly_name: "Next Class"
        value_template: "{{ state_attr('calendar.uni_lsf', 'message') }}"

      uni_lsf_next_class_date_time:
        friendly_name: "Next Class Date Time"
        value_template: "{{ state_attr('calendar.uni_lsf', 'start_time') | timestamp_custom('%Y-%m-%d %H:%M') }}"

      uni_lsf_next_class_description:
        friendly_name: "Next Class Description"
        value_template: "{{ state_attr('calendar.uni_lsf', 'description') }}"

      uni_lsf_next_class_room:
        friendly_name: "Next Class Room"
        value_template: "{{ state_attr('calendar.uni_lsf', 'location') }}"

      uni_lsf_next_class_prof:
        friendly_name: "Next Class Professor"
        value_template: >
          {{ state_attr('calendar.uni_lsf', 'message') | regex_findall_index(find='\((?!.*\()(.+)\)$', index=0, ignorecase=False) }}

      uni_lsf_next_class_name_short:
        friendly_name: "Next Class Name Short"
        value_template: >
          {{ state_attr('calendar.uni_lsf', 'message') | regex_findall_index(find='^[A-Z0-9]+', index=0, ignorecase=False) }}

      uni_lsf_next_class_name_full:
        friendly_name: "Next Class Name Full"
        value_template: >
          {{ state_attr('calendar.uni_lsf', 'message') | regex_findall_index(find='[A-Z][0-9]{2}\.[0-9] [A-Z0-9]+ [^(]+', index=0, ignorecase=False) | regex_replace('[A-Z][0-9]{2}\.[0-9] [A-Z0-9]+ ', '', ignorecase=False) |regex_replace('\sund(?![a-z])', ' & ') }}

  ### Appointments #############################################
  - platform: template
    sensors:
      next_appt_date_time:
        friendly_name: "Next Appt Date Time"
        value_template: "{{ as_timestamp(states.calendar.personal.attributes.start_time) | timestamp_custom('%Y-%m-%d %H:%M') }}"

  - platform: template
    sensors:
      next_appt_message:
        friendly_name: "Next Appt"
        value_template: "{{ states.calendar.personal.attributes.message }}"

  - platform: template
    sensors:
      next_appt_description:
        friendly_name: "Next Appt Description"
        value_template: "{{ states.calendar.personal.attributes.description }}"

  - platform: template
    sensors:
      days_to_next_appointment:
        friendly_name: "Days to Next Appointment"
        value_template: >-
          {% set year = states.sensor.date.state.split('-')[0] %}
          {% set month = states.sensor.date.state.split('-')[1] %}
          {% set date = states.sensor.date.state.split('-')[2] %}
          {%- set Month = states.calendar.personal.attributes.start_time.split('-')[1] -%}
          {%- set DayDate = states.calendar.personal.attributes.start_time.split('-')[2] -%}
          {%- set numOfDays = ((as_timestamp(strptime(year ~ '-' ~ Month ~ '-' ~ DayDate , '%Y-%m-%d')) | timestamp_custom('%j', true) | int ) - (as_timestamp(strptime(year ~ '-' ~ month~ '-' ~ date , '%Y-%m-%d')) | timestamp_custom('%j', true) | int)) -%}
          {%- if numOfDays < 0 -%}
            {{ numOfDays + 365 }}
          {%- else -%}
            {{ numOfDays }}
          {%- endif -%}

  ### Holidays #########################################
  - platform: template
    sensors:
      next_holiday:
        friendly_name: "Next Holiday"
        value_template: "{{ states.calendar.feiertage_berlin.attributes.message }}"

  - platform: template
    sensors:
      next_holiday_date:
        friendly_name: "Next Holiday Date"
        value_template: "{{ as_timestamp(states.calendar.feiertage_berlin.attributes.start_time) | timestamp_custom('%Y-%m-%d') }}"

  - platform: template
    sensors:
      days_to_next_holiday:
        friendly_name: "Days to Next Holiday"
        value_template: >-
          {% set year = states.sensor.date.state.split('-')[0] %}
          {% set month = states.sensor.date.state.split('-')[1] %}
          {% set date = states.sensor.date.state.split('-')[2] %}
          {%- set Month = states.calendar.feiertage_berlin.attributes.start_time.split('-')[1] -%}
          {%- set DayDate = states.calendar.feiertage_berlin.attributes.start_time.split('-')[2] -%}
          {%- set numOfDays = ((as_timestamp(strptime(year ~ '-' ~ Month ~ '-' ~ DayDate , '%Y-%m-%d')) | timestamp_custom('%j', true) | int ) - (as_timestamp(strptime(year ~ '-' ~ month~ '-' ~ date , '%Y-%m-%d')) | timestamp_custom('%j', true) | int)) -%}
          {%- if numOfDays < 0 -%}
            {{ numOfDays + 365 }}
          {%- else -%}
            {{ numOfDays }}
          {%- endif -%}

  ### Birthdays ####################################
  - platform: template
    sensors:
      next_birthday_date:
        friendly_name: "Next Birthday Date"
        value_template: "{{ as_timestamp(states.calendar.contacts.attributes.start_time) | timestamp_custom('%Y-%m-%d') }}"

  - platform: template
    sensors:
      next_birthday:
        friendly_name: "Next Birthday"
        value_template: >
          {{ states.calendar.contacts.attributes.message | replace(" hat Geburtstag","") }}

  - platform: template
    sensors:
      days_to_next_birthday:
        friendly_name: "Days to Next Birthday"
        value_template: >-
          {% set year = states.sensor.date.state.split('-')[0] %}
          {% set month = states.sensor.date.state.split('-')[1] %}
          {% set date = states.sensor.date.state.split('-')[2] %}
          {%- set Month = states.calendar.contacts.attributes.start_time.split('-')[1] -%}
          {%- set DayDate = states.calendar.contacts.attributes.start_time.split('-')[2] -%}
          {%- set numOfDays = ((as_timestamp(strptime(year ~ '-' ~ Month ~ '-' ~ DayDate , '%Y-%m-%d')) | timestamp_custom('%j', true) | int ) - (as_timestamp(strptime(year ~ '-' ~ month~ '-' ~ date , '%Y-%m-%d')) | timestamp_custom('%j', true) | int)) -%}
          {%- if numOfDays < 0 -%}
            {{ numOfDays + 365 }}
          {%- else -%}
            {{ numOfDays }}
          {%- endif -%}

automation:
  - id: calendar_holiday_notification_mobile
    alias: Calendar holiday notification mobile
    trigger:
      # - platform: time
      #   # hours: '/1'
      #   # minutes: 3
      #   # seconds: 00
      #   at: '00:01:00'
      # - platform: state
      #   entity_id: sensor.days_to_next_holiday
      #   from: 1
      #   to: 0
      - platform: state
        entity_id: calendar.feiertage_berlin
        from: "off"
        to: "on"
    condition:
      # - condition: state
      #   entity_id: input_boolean.present
      #   state: 'on'
      # - condition: state
      #   entity_id: input_boolean.sleeping
      #   state: 'off'
      - condition: state
        entity_id: calendar.feiertage_berlin
        state: "on"
    action:
      - service: notify.mobile_app_disrupted_iphone
        data_template:
          message: >
            Today is {{ state_attr('calendar.feiertage_berlin', 'message') }}, which is a holiday. Enjoy this free day!

#   - id: calendar_holiday_announcement
#     alias: Calendar holiday announcement
#     trigger:
#       platform: time
#       # hours: '/1'
#       # minutes: 3
#       # seconds: 00
#       at: '00:01:00'
#     condition:
#       - condition: state
#         entity_id: input_boolean.present
#         state: 'on'
#       - condition: state
#         entity_id: input_boolean.sleeping
#         state: 'off'
#       - condition: state
#         entity_id: calendar.feiertage_berlin
#         state: 'on'
#       # - condition: template
#       #   value_template: '{{ states("media_player.google_home_speaker") != "playing" }}'
#     action:
#       - service: notify.ga_broadcast
#         data_template:
#           message: >
#             Hey, just wanted to let you know that today is {{ state_attr('calendar.feiertage_berlin', 'message') }}, which is a holiday.

# - id: calendar_appointment_announcement
#   alias: Calendar appointment announcement
#   trigger:
#     platform: state
#     entity_id: input_boolean.present
#     to: 'on'
#   condition:
#     - condition: state
#       entity_id: input_boolean.present
#       state: 'on'
#     - condition: template
#       value_template: '{{ states.sensor.days_to_next_appointment.state | int == 0 }}'
#   action:
#     # - delay: '00:01:30'
#     - service: notify.ga_broadcast
#       data_template:
#         message: >-
#           Hey friend, you have an upcoming appointment today at {{ as_timestamp(state_attr('calendar.personal', 'start_time') | timestamp_custom('%R') }}: {{ state_attr('calendar.personal', 'message') }}
#     # - service: telegram_bot.send_message
#     #   data_template:
#     #     message: >-
#     #       Appointment Today {{ states.calendar.dawns_calender.attributes.message }}
#     #       with {{ states.calendar.dawns_calender.attributes.description }}
#     #       at {{ as_timestamp(states.calendar.dawns_calender.attributes.start_time) | timestamp_custom('%R') }}
