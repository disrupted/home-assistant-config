# Shelly1PM
substitutions:
  name: kitchen
  friendly_name: Kitchen
  light_entity: light.kitchen_ceiling

esphome:
  name: ${name}
  platform: ESP8266
  board: esp01_1m

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_pass
  fast_connect: true
  reboot_timeout: 0s
  manual_ip:
    static_ip: !secret ip_shelly_kitchen
    gateway: !secret ip_router
    subnet: !secret ip_subnet

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "${friendly_name} Hotspot"
    password: !secret esphome_fallback_hotspot_pass

captive_portal:

# Enable Web server
web_server:
  port: 80

# Enable logging
# logger:

# Enable Home Assistant API
api:
  password: !secret esphome_api_pass
  reboot_timeout: 0s

ota:
  password: !secret esphome_ota_pass

time:
  - platform: homeassistant
    id: homeassistant_time

# output:
#  - platform: gpio
#    pin: GPIO15
#    id: shelly_1pm_relay

text_sensor:
  - platform: homeassistant
    name: "${friendly_name} Light Availablity Text"
    entity_id: "${light_entity}"
    id: light_avail_text
    internal: true

switch:
  - platform: restart
    name: "${friendly_name} Restart"

  - platform: gpio
    id: relay
    name: "${friendly_name} Relay"
    pin: GPIO15
    restore_mode: RESTORE_DEFAULT_ON

sensor:
  - platform: wifi_signal
    name: "${friendly_name} WiFi Signal"
    update_interval: 60s

  - platform: hlw8012
    cf_pin: GPIO05
    cf1_pin: GPIO13 # not used because it is not available on the 1PM but it is needed to compile
    sel_pin: GPIO14 # not used because it is not available on the 1PM but it is needed to compile
    power:
      name: "${friendly_name} Power"
      unit_of_measurement: W
      id: "${name}_power"
      icon: mdi:flash-circle
      accuracy_decimals: 0
      # filters:
      # Reading -> actual
      # - calibrate_linear:
      #     - 2.5 -> 0.16
      #     - 747.0 -> 125.0
      #     - 1409.0 -> 237.0
      #     - 2663.0 -> 444.0
      #     - 8600.0 -> 1390.0
      # - lambda: if (x <= 6.0) return 0; else return (x - 6);
    update_interval: 10s

  # NTC Temperature
  - platform: ntc
    id: temperature
    sensor: ${name}_resistance_sensor
    name: "${friendly_name} Temperature"
    unit_of_measurement: "Â°C"
    accuracy_decimals: 0
    icon: mdi:thermometer
    calibration:
      b_constant: 3350
      reference_resistance: 10kOhm
      reference_temperature: 298.15K
  - platform: resistance
    id: ${name}_resistance_sensor
    sensor: ${name}_source_sensor
    configuration: DOWNSTREAM
    resistor: 32kOhm
  - platform: adc
    id: ${name}_source_sensor
    pin: A0
    update_interval: 10s

binary_sensor:
  - platform: status
    name: "${friendly_name} Status"

  - platform: template
    name: "${friendly_name} Light Availability"
    id: light_avail
    lambda: |-
      if ((id(light_avail_text).state == "on") or (id(light_avail_text).state == "off")) {
        // Bulb is Available.
        return true;
      } else {
        // Bulb is Unavailable.
        return false;
      }

  # Binary sensor for the button press
  - platform: gpio
    name: "${friendly_name} Light Switch"
    pin:
      number: GPIO4
    on_state:
      then:
        - if:
            condition:
              and:
                - switch.is_on: relay
                - api.connected:
                - binary_sensor.is_on: light_avail
            then:
              - homeassistant.service:
                  service: script.light_toggle
                  data:
                    entity_id: "${light_entity}"
            else:
              - switch.toggle: relay
    on_multi_click:
      - timing:
          - ON for at most 1s
          - OFF for at most 1s
          - ON for at most 1s
          - OFF for at most 0.2s
        then:
          - logger.log: "Double Click - Manual toggle relay"
          - switch.toggle: relay

status_led:
  pin:
    number: GPIO0
    inverted: true

# Overheat Protection
interval:
  - interval: 1000ms
    then:
      if:
        condition:
          and:
            - sensor.in_range:
                id: temperature
                above: 80.0
            - switch.is_on: relay
        then:
          - switch.turn_off: relay
